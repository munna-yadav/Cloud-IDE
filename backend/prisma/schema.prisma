// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(uuid())
  email                 String    @unique
  password              String
  name                  String?
  isEmailVerified       Boolean   @default(false)
  emailVerificationToken String?   @unique
  passwordResetToken    String?   @unique
  passwordResetExpires  DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  projects              Project[] @relation("ProjectMembers")
  ownedProjects         Project[] @relation("ProjectOwner")
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  owner       User      @relation("ProjectOwner", fields: [ownerId], references: [id])
  ownerId     String
  members     User[]    @relation("ProjectMembers")
  files       File[]
}

model File {
  id        String   @id @default(uuid())
  name      String
  content   String
  language  String
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
}

model CollaborationSession {
  id        String   @id @default(uuid())
  projectId String
  userId    String
  startedAt DateTime @default(now())
  endedAt   DateTime?
  cursor    Json?    // Stores cursor position and selection
}
